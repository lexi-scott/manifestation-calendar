{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lexid\\\\dev\\\\manifestation-calendar\\\\src\\\\features\\\\Calendar\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays, addMonths, subMonths, format, isSameMonth, isSameDay } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calendar({\n  onDateClick\n}) {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const renderHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-between items-center mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentMonth(subMonths(currentMonth, 1)),\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: format(currentMonth, \"MMMM yyyy\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentMonth(addMonths(currentMonth, 1)),\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n  const renderDays = () => {\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 text-center font-semibold mb-2\",\n      children: days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 26\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCells = () => {\n    const monthStart = startOfMonth(currentMonth);\n    const monthEnd = endOfMonth(monthStart);\n    const startDate = startOfWeek(monthStart);\n    const endDate = endOfWeek(monthEnd);\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        const cloneDay = day;\n        days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 text-center border h-16 cursor-pointer transition hover:bg-blue-100 ${!isSameMonth(day, monthStart) ? \"text-gray-400\" : \"\"}`,\n          onClick: () => onDateClick && onDateClick(cloneDay),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: isSameDay(day, new Date()) ? \"bg-blue-500 text-white rounded-full w-6 h-6 mx-auto\" : \"\",\n            children: format(day, \"d\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this));\n        day = addDays(day, 1);\n      }\n      rows.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-7\",\n        children: days\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this));\n      days = [];\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-6 p-4 shadow-md bg-white rounded-xl\",\n    children: [renderHeader(), renderDays(), renderCells()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"N6MwIQ3MTTQfe+bC1boIoFejPG4=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","startOfMonth","endOfMonth","startOfWeek","endOfWeek","addDays","addMonths","subMonths","format","isSameMonth","isSameDay","jsxDEV","_jsxDEV","Calendar","onDateClick","_s","currentMonth","setCurrentMonth","Date","renderHeader","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderDays","days","map","day","renderCells","monthStart","monthEnd","startDate","endDate","rows","i","cloneDay","push","_c","$RefreshReg$"],"sources":["C:/Users/lexid/dev/manifestation-calendar/src/features/Calendar/Calendar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays, addMonths, subMonths, format, isSameMonth, isSameDay } from \"date-fns\";\r\n\r\nexport default function Calendar({ onDateClick }) {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n\r\n  const renderHeader = () => (\r\n    <div className=\"flex justify-between items-center mb-4\">\r\n      <button onClick={() => setCurrentMonth(subMonths(currentMonth, 1))}>←</button>\r\n      <h2 className=\"text-xl font-bold\">{format(currentMonth, \"MMMM yyyy\")}</h2>\r\n      <button onClick={() => setCurrentMonth(addMonths(currentMonth, 1))}>→</button>\r\n    </div>\r\n  );\r\n\r\n  const renderDays = () => {\r\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    return (\r\n      <div className=\"grid grid-cols-7 text-center font-semibold mb-2\">\r\n        {days.map(day => <div key={day}>{day}</div>)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCells = () => {\r\n    const monthStart = startOfMonth(currentMonth);\r\n    const monthEnd = endOfMonth(monthStart);\r\n    const startDate = startOfWeek(monthStart);\r\n    const endDate = endOfWeek(monthEnd);\r\n\r\n    const rows = [];\r\n    let days = [];\r\n    let day = startDate;\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        const cloneDay = day;\r\n        days.push(\r\n          <div\r\n            key={day}\r\n            className={`p-2 text-center border h-16 cursor-pointer transition hover:bg-blue-100 ${\r\n              !isSameMonth(day, monthStart) ? \"text-gray-400\" : \"\"\r\n            }`}\r\n            onClick={() => onDateClick && onDateClick(cloneDay)}\r\n          >\r\n            <div className={isSameDay(day, new Date()) ? \"bg-blue-500 text-white rounded-full w-6 h-6 mx-auto\" : \"\"}>\r\n              {format(day, \"d\")}\r\n            </div>\r\n          </div>\r\n        );\r\n        day = addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div key={day} className=\"grid grid-cols-7\">\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n\r\n    return <div>{rows}</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-6 p-4 shadow-md bg-white rounded-xl\">\r\n      {renderHeader()}\r\n      {renderDays()}\r\n      {renderCells()}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}